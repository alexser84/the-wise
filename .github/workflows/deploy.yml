name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
      - feat/static-to-node-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/the-wise:latest

    - name: Install doctl
      run: |
        curl -sL https://github.com/digitalocean/doctl/releases/download/v1.64.0/doctl-1.64.0-linux-amd64.tar.gz | tar -xzv
        sudo mv doctl /usr/local/bin

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Initialize Terraform
      run: terraform init

    - name: Validate if droplet exists
      id: check_droplet
      run: |
        doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        if doctl compute droplet list the-wise-app --format Name | grep -q the-wise-app; then
          echo "Droplet exists"
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "Droplet does not exist"
          echo "exists=false" >> $GITHUB_ENV
        fi

    - name: Power on droplet if exists
      if: env.exists == 'true'
      run: |
        doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        DROPLET_ID=$(doctl compute droplet list the-wise-app --format ID --no-header)
        if [ $(doctl compute droplet get $DROPLET_ID --format Status --no-header) != "active" ]; then
          doctl compute droplet-action power-on $DROPLET_ID
          while [ $(doctl compute droplet get $DROPLET_ID --format Status --no-header) != "active" ]; do
            echo "Waiting for droplet to be active..."
            sleep 5
          done
        fi

    - name: Set up DigitalOcean droplet
      if: env.exists == 'false'
      run: |
        doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        doctl compute droplet create the-wise-app \
          --region nyc3 \
          --image docker-20-04 \
          --size s-1vcpu-1gb \
          --ssh-keys ${{ secrets.SSH_KEY_FINGERPRINT }} \
          --tag-name web \
          --wait

    - name: Wait for droplet to be ready
      run: |
        IP=$(doctl compute droplet list the-wise-app --format PublicIPv4 --no-header)
        while ! nc -z $IP 22; do
          echo "Waiting for SSH to be available..."
          sleep 5
        done

    - name: Install Docker Compose on Droplet
      env:
        PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
      run: |
        IP=$(doctl compute droplet list the-wise-app --format PublicIPv4 --no-header)
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no root@$IP << 'EOF'
        apt-get update
        apt-get install -y docker-compose
        EOF
        rm private_key

    - name: Deploy application
      env:
        PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
      run: |
        IP=$(doctl compute droplet list the-wise-app --format PublicIPv4 --no-header)
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no root@$IP << 'EOF'
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          echo "Waiting for release of dpkg lock..."
          sleep 5
        done
        apt-get update
        apt-get install -y docker-compose
        docker-compose -f ./docker-compose.yml up -d
        EOF
        rm private_key
